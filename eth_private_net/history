eth.accounts
miner.start()
eth.hashrate
eth.getBalance
eth.getBalance(eth.accounts[1])
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[0],"ether")
eth.getBalance(eth.accounts[0])
miner.stop()
miner.start()
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(5000)})
eth.sendTransaction({from:eth.accounts[0],to:eth.accounts[1],value:web3.toWei(5,"ether")})
eth.getBalance(eth.accounts[0])
eth.getBalance(eth.accounts[1])
bin ="6060604052341561000f57600080fd5b60d38061001d6000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c14606e575b600080fd5b3415605857600080fd5b606c60048080359060200190919050506094565b005b3415607857600080fd5b607e609e565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a72305820c6d775240a0181c2ad2b71046e1eadb11375d8fd34804243d48effaf64343b4f0029"
var abi = [{"constant":false,"inputs":[{"name":"x","type":"uint256"}],"name":"set","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"retVal","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]
contract = eth.contract(abi)
Memo = contract.new({from:eth.accounts[0],data:"0x"+bin,gas:100000})
Memo
eth.hashrate
Memo
eth.hashrate
miner.start()
eth.hashrate
Memo
Memo.get()
Memo.address
Memo.constructor
Memo
bin = "6060604052341561000f57600080fd5b60d38061001d6000396000f3006060604052600436106049576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806360fe47b114604e5780636d4ce63c14606e575b600080fd5b3415605857600080fd5b606c60048080359060200190919050506094565b005b3415607857600080fd5b607e609e565b6040518082815260200191505060405180910390f35b8060008190555050565b600080549050905600a165627a7a72305820795eb2e2731a4968efccad6572e41af4b47302fe3fd7f35e28e8bf3e77ef1e5b0029"
var abi = [{"constant":false,"inputs":[{"name":"x","type":"uint256"}],"name":"set","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"get","outputs":[{"name":"retVal","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"}]
contract = eth.contract(abi)
SingleNumRegister = contract.new({from:eth.accounts[0],data:"0x"+bin,gas:1000000})
contract = eth.contract(abi)
SingleNumRegister = contract.new({from:eth.accounts[0],data:"0x"+bin,gas:1000000})
SingleNumRegister
contract.abi
eth.contract([{
    constant: false,
    inputs: [{
        name: "x",
        type: "uint256"
    }],
    name: "set",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
}, {
    constant: true,
    inputs: [],
    name: "get",
    outputs: [{
        name: "retVal",
        type: "uint256"
    }],
    payable: false,
    stateMutability: "view",
    type: "function"
}]
).at(0x87332dd6745fe2326f732daea655eb17fb938440);
eth.contract([{
    constant: false,
    inputs: [{
        name: "x",
        type: "uint256"
    }],
    name: "set",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
}, {
    constant: true,
    inputs: [],
    name: "get",
    outputs: [{
        name: "retVal",
        type: "uint256"
    }],
    payable: false,
    stateMutability: "view",
    type: "function"
}]
).at('0x87332dd6745fe2326f732daea655eb17fb938440');
eth.contract([{
    constant: false,
    inputs: [{
        name: "x",
        type: "uint256"
    }],
    name: "set",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function"
}, {
    constant: true,
    inputs: [],
    name: "get",
    outputs: [{
        name: "retVal",
        type: "uint256"
    }],
    payable: false,
    stateMutability: "view",
    type: "function"
}]
).at('0x87332dd6745fe2326f732daea655eb17fb938440';
)
contract.abi
contract.get.call()
contract.get()
contract.abi
contract.abi.get()
contract.abi
contract.at
contract.getData
contract.getData()
contract.constructor
SingleNumRegister
var addr_contract ="0x87332dd6745fe2326f732daea655eb17fb938440"
addr_contract
abi
var test = eth.contract(abi).at(addr_contract)
test
test.get()
test.set()
test.set(5)
test.set(5,{from:eth.accounts[0]})
test.set(5)
test.set(5,{from:eth.accounts[0]})
test.get()
eth.hashrate
miner.stop()
eth.hashrate
contract.get()
eth.accounts
eth.hashrate
exti
eth.accounts
exti
eth.hashrate